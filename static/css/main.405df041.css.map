{"version":3,"file":"static/css/main.405df041.css","mappings":"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","sources":["assets/styles/reset.scss","assets/styles/fonts.scss","assets/styles/variables.scss","assets/styles/typography.scss","assets/styles/_index.scss","pages/Home/Home.module.scss","components/Button/Button.module.scss","components/Wrapper/Wrapper.module.scss","pages/Home/components/Hero/Hero.module.scss","assets/styles/include-media.scss","pages/Home/components/ShortUrl/ShortUrl.module.scss","pages/Home/components/ShortUrl/components/Form/Form.module.scss","pages/Home/components/ShortUrl/components/Results/Results.module.scss","pages/Home/components/ShortUrl/components/Result/Result.module.scss","pages/Home/components/Statistics/Statistics.module.scss","pages/Home/components/Statistics/components/Card.module.scss","components/Footer/Footer.module.scss","components/Header/Header.module.scss","components/Header/components/MenuDesktop/MenuDesktop.module.scss","components/Header/components/MenuMobile/MenuMobile.module.scss","components/Header/components/MenuToggler/MenuToggler.module.scss"],"sourcesContent":["\r\n/* Box sizing rules */\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* Remove default padding */\r\nul[class],\r\nol[class] {\r\n  padding: 0;\r\n}\r\n\r\n/* Remove default margin */\r\nbody,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\np,\r\nul,\r\nol,\r\nli,\r\nfigure,\r\nfigcaption,\r\nblockquote,\r\ndl,\r\ndd {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nhtml {\r\n  overflow-x: hidden;\r\n}\r\n\r\n/* Set core body defaults */\r\nbody {\r\n  width: 100%;\r\n  height: auto;\r\n  scroll-behavior: smooth;\r\n  text-rendering: optimizeSpeed;\r\n  line-height: 1.5;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n\r\n/* Remove list styles on ul, ol elements with a class attribute */\r\nul[class],\r\nol[class] {\r\n  list-style: none;\r\n}\r\n\r\n/* A elements that don't have a class get default styles */\r\na:not([class]) {\r\n  text-decoration-skip-ink: auto;\r\n}\r\n\r\n/* Make images easier to work with */\r\nimg {\r\n  max-width: 100%;\r\n  display: block;\r\n}\r\n\r\n/* Inherit fonts for inputs and buttons */\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n  font: inherit;\r\n}\r\n\r\n/* Remove all animations and transitions for people that prefer not to see them */\r\n@media (prefers-reduced-motion: reduce) {\r\n  * {\r\n    animation-duration: 0.01ms !important;\r\n    animation-iteration-count: 1 !important;\r\n    transition-duration: 0.01ms !important;\r\n    scroll-behavior: auto !important;\r\n  }\r\n}","@font-face {\r\n  font-family: 'Poppins';\r\n  src: url(../fonts/Poppins-Regular.ttf);\r\n  font-weight: 400;\r\n  font-style: normal;\r\n}\r\n\r\n@font-face {\r\n  font-family: 'Poppins';\r\n  src: url(../fonts/Poppins-Medium.ttf);\r\n  font-weight: 500;\r\n  font-style: normal;\r\n}\r\n\r\n@font-face {\r\n  font-family: 'Poppins';\r\n  src: url(../fonts/Poppins-Bold.ttf);\r\n  font-weight: 700;\r\n  font-style: normal;\r\n}",":root {\r\n  --ff-primary: 'Poppins', sans-serif;\r\n\r\n\r\n  /**\r\n   * COLORS\r\n   */\r\n  // BASE\r\n  --c-white: hsl(0, 0%, 100%);\r\n  --c-black: hsl(0, 0%, 0%);\r\n  // THEME\r\n  --c-cyan: hsl(180, 66%, 49%);\r\n  --c-cyan-accent: hsla(180, 66%, 49%, 0.6);\r\n  --c-violet: hsl(257, 27%, 26%);\r\n  --c-red: hsl(0, 87%, 67%);\r\n  --c-red-accent: hsla(0, 87%, 67%, 0.6);\r\n  // NEUTRAL \r\n  --c-neutral-100: hsl(225, 33%, 95%);\r\n  --c-neutral-400: hsl(0, 0%, 75%);\r\n  --c-neutral-500: hsl(257, 7%, 63%);\r\n  --c-neutral-800: hsl(255, 11%, 22%);\r\n  --c-neutral-900: hsl(260, 8%, 14%);\r\n}","h1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\np {\r\n  font-family: var(--ff-primary);\r\n}\r\n\r\nh1 {\r\n  font-size: 4.5rem;\r\n  letter-spacing: -2px;\r\n}\r\n\r\nh2 {\r\n  font-size: 2.25rem;\r\n  letter-spacing: -1.5px;\r\n}\r\n\r\n","@use './reset.scss';\r\n@use './fonts.scss';\r\n@use './variables.scss';\r\n@use './include-media.scss';\r\n@use './typography.scss';\r\n\r\n/* root element */\r\n#root {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n\r\n  > main {\r\n    flex-grow: 1;\r\n  }\r\n}",".container {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n}",".container {\r\n  display: block;\r\n  padding: 0.725em 2em;\r\n  background-color: var(--c-cyan);\r\n  border: none;\r\n  border-radius: 0.5em;\r\n  color: var(--c-white);\r\n  font-family: var(--ff-primary);\r\n  font-weight: 700;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transition: color 0.2s ease;\r\n\r\n  &.rounded {\r\n    border-radius: 50vh;\r\n  }\r\n\r\n  &.sm {\r\n    padding: 0.625em 1.375em;\r\n  }\r\n}",".container {\r\n  margin: auto;\r\n  width: min(1110px, 87.1%);\r\n}","@use 'assets/styles/include-media.scss' as *;\r\n\r\n.container {\r\n  padding: 9.125rem 0 13.875rem;\r\n  background-color: var(--c-white);\r\n\r\n  @include media('<=434px') {\r\n    padding-top: 8.125rem;\r\n  }\r\n\r\n  @include media('<=375px') {\r\n    padding-top: 6.125rem;\r\n  }\r\n\r\n  .wrapper {\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1.2fr 0.8fr;\r\n\r\n    // LAYOUT ON MOBILE\r\n    @include media('<=633px') {\r\n      grid-template-columns: 1fr;\r\n      grid-template-rows: 1fr 1fr;\r\n      gap: 1.5rem;\r\n\r\n      .content {\r\n        order: 2;\r\n      }\r\n\r\n      .illustration {\r\n        order: 1;\r\n      }\r\n    }\r\n\r\n    @include media('<=375px') {\r\n      gap: 2rem;\r\n    }\r\n\r\n    .content {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n\r\n      @include media('<=633px') {\r\n        align-items: center;\r\n        text-align: center;\r\n      }\r\n\r\n      h1 {\r\n        margin-bottom: 3px;\r\n        color: var(--c-neutral-800);\r\n        font-size: clamp(3rem, 7vw, 4.5rem);\r\n        line-height: 1.13;\r\n      }\r\n\r\n      p {\r\n        margin-bottom: 2.5rem;\r\n        max-width: 500px;\r\n        color: var(--c-neutral-500);\r\n        font-size: clamp(0.875rem, 2vw, 1.25rem);\r\n        font-weight: 500;\r\n\r\n        @include media('<=912px') {\r\n          margin-bottom: 1.75rem;\r\n        }\r\n\r\n        @include media('<=633px') {\r\n          max-width: 400px;\r\n          font-size: 1.125rem;\r\n        }\r\n      }\r\n\r\n      a {\r\n        font-size: 1.125rem;\r\n        font-size: clamp(0.875rem, 2vw, 1.25rem);\r\n\r\n        @include media('<=633px') {\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n    }\r\n\r\n    .illustration {\r\n      @include media('<=633px') {\r\n        position: relative;\r\n      }\r\n\r\n      img {\r\n        position: absolute;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        width: 733px;\r\n        aspect-ratio: 111/73;\r\n\r\n        @include media('<=912px') {\r\n          width: 600px;\r\n        }\r\n\r\n        @include media('<=810px') {\r\n          width: 500px;\r\n        }\r\n\r\n        @include media('<=633px') {\r\n          top: unset;\r\n          left: 50%;\r\n          bottom: 0;\r\n          transform: translate(-35%, 0);\r\n          min-width: 551px;\r\n        }\r\n        @include media('<=414px') {\r\n          // left: 0;\r\n          // transform: translate(0);\r\n          min-width: 520px;\r\n        }\r\n\r\n        @include media('<=375px') {\r\n          transform: translate(-33%, 0);\r\n          min-width: 500px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v2.0.0\r\n//\r\n//        https://eduardoboucas.github.io/include-media\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Kitty Giraudel (@kittygiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n@charset \"UTF-8\";\r\n\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n@use 'sass:math';\r\n@use 'sass:map';\r\n@use 'sass:list';\r\n@use 'sass:string';\r\n@use 'sass:meta';\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  'phone': 320px,\r\n  'tablet': 768px,\r\n  'desktop': 1024px,\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x':\r\n    '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n  'retina3x':\r\n    '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)',\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0,\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if meta.feature-exists('at-error') {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {\r\n  }\r\n}\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {\r\n}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map.get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {\r\n    }\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map.has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n        ($prefix == 'min' and $value > $no-media-breakpoint-value)\r\n      {\r\n        @return false;\r\n      }\r\n    } @else if not list.index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if string.index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: string.index($expression, $operator);\r\n  $parsed-dimension: string.slice($expression, 0, $operator-index - 1);\r\n  $parsed-dimension: str-trim($parsed-dimension);\r\n  $dimension: 'width';\r\n\r\n  @if string.length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(list.index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: string.index($expression, $operator);\r\n  $value: string.slice($expression, $operator-index + string.length($operator));\r\n  $trimmedValue: str-trim($value);\r\n\r\n  @if map.has-key($breakpoints, $trimmedValue) {\r\n    $value: map.get($breakpoints, $trimmedValue);\r\n  } @else {\r\n    $value: to-number($trimmedValue);\r\n  }\r\n\r\n  $interval: map.get($unit-intervals, math.unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('Unknown unit `#{math.unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n    $value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map.has-key($media-expressions, $expression) {\r\n    @return map.get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: list.length($list)) {\r\n  @if list.length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: list.append($result, list.nth($list, $i), comma);\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n\r\n@function to-number($value) {\r\n  @if meta.type-of($value) == 'number' {\r\n    @return $value;\r\n  } @else if meta.type-of($value) != 'string' {\r\n    $_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: string.slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == '-');\r\n  $numbers: (\r\n    '0': 0,\r\n    '1': 1,\r\n    '2': 2,\r\n    '3': 3,\r\n    '4': 4,\r\n    '5': 5,\r\n    '6': 6,\r\n    '7': 7,\r\n    '8': 8,\r\n    '9': 9,\r\n  );\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == '+' or $first-character == '-') {\r\n    $value: string.slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through string.length($value) {\r\n    $character: string.slice($value, $i, $i);\r\n\r\n    @if not(list.index(map.keys($numbers), $character) or $character == '.') {\r\n      @return to-length(if($minus, -$result, $result), string.slice($value, $i));\r\n    }\r\n\r\n    @if $character == '.' {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map.get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + math.div(map.get($numbers, $character), $digits);\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: (\r\n    'px': 1px,\r\n    'cm': 1cm,\r\n    'mm': 1mm,\r\n    '%': 1%,\r\n    'ch': 1ch,\r\n    'pc': 1pc,\r\n    'in': 1in,\r\n    'em': 1em,\r\n    'rem': 1rem,\r\n    'pt': 1pt,\r\n    'ex': 1ex,\r\n    'vw': 1vw,\r\n    'vh': 1vh,\r\n    'vmin': 1vmin,\r\n    'vmax': 1vmax,\r\n  );\r\n\r\n  @if not list.index(map.keys($units), $unit) {\r\n    $_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map.get($units, $unit);\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Jack McNicol\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Trims a string of leading and trailing spaces\r\n///\r\n/// @param {String} $string - Value to be trimmed\r\n///\r\n/// @return {String}\r\n///\r\n\r\n@function str-trim($string) {\r\n  @if (str-slice($string, 1, 1) == ' ') {\r\n    @return str-trim(str-slice($string, 2));\r\n  } @else if (str-slice($string, str-length($string), -1) == ' ') {\r\n    @return str-trim(str-slice($string, 1, -2));\r\n  } @else {\r\n    @return $string;\r\n  }\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Kitty Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map.merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map.merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and list.length($conditions) == 0) or\r\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\r\n  {\r\n    @content;\r\n  } @else if ($im-media-support and list.length($conditions) > 0) {\r\n    @media #{string.unquote(parse-expression(list.nth($conditions, 1)))} {\r\n      // Recursive call\r\n      $sliced-conditions: slice($conditions, 2);\r\n      @include media($sliced-conditions...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}",".container {\r\n  background-color: var(--c-neutral-100);\r\n\r\n}","@use 'assets/styles/include-media.scss' as *;\r\n\r\n.container {\r\n  display: flex;\r\n  gap: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  padding: 2.625rem 4rem;\r\n  background: var(--c-violet) url(/assets/images/bg-shorten-desktop.svg);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  border-radius: 0.5rem;\r\n\r\n  @include media('<=1024px') {\r\n    gap: 1.25rem;\r\n    padding: 2.125rem 3.25rem;\r\n  }\r\n\r\n  @include media('<=820px') {\r\n    gap: 1rem;\r\n    padding: 1.875rem 2.5rem;\r\n  }\r\n\r\n  @include media('<=633px') {\r\n    flex-direction: column;\r\n    padding: 1.5rem 1.5rem;\r\n    background: var(--c-violet) url(/assets/images/bg-shorten-mobile.svg);\r\n    background-repeat: no-repeat;\r\n    background-size: 237px;\r\n    background-size: 70%;\r\n    background-position: top right;\r\n  }\r\n\r\n  .input_group {\r\n    flex-grow: 1;\r\n    position: relative;\r\n    display: flex;\r\n\r\n    @include media('<=633px') {\r\n      flex-direction: column;\r\n    }\r\n\r\n    input[type=url] {\r\n      display: block;\r\n      width: 100%;\r\n      padding: 0.57rem 1.75em;\r\n      border: 2px solid transparent;\r\n      border-radius: 0.5em;\r\n      font-family: var(--ff-primary);\r\n      font-size: clamp(0.875rem, 2vw, 1.125rem);\r\n\r\n      &::placeholder {\r\n        font-size: clamp(0.875rem, 2vw, 1.125rem);\r\n        color: var(--c-neutral-400);\r\n        font-weight: 500;\r\n      }\r\n\r\n      &.invalid {\r\n        color: var(--c-red-accent);\r\n        border-color: var(--c-red);\r\n\r\n        &::placeholder {\r\n          color: var(--c-red-accent);\r\n        }\r\n      }\r\n\r\n      @include media('<=633px') {\r\n        padding: 0.75rem 1.75em;\r\n        font-size: 1rem;\r\n\r\n        &::placeholder {\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n\r\n      @include media('<=414px') {\r\n        padding: 0.57rem 1.05em;\r\n      }\r\n    }\r\n\r\n    .error_msg {\r\n      position: absolute;\r\n      top: calc(100% + 3px);\r\n      color: var(--c-red);\r\n      font-style: italic;\r\n      font-size: 0.875rem;\r\n\r\n      @include media('<=633px') {\r\n        position: relative;\r\n        display: inline-flex;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  button[type=submit] {\r\n    font-size: clamp(0.875rem, 2vw, 1.25rem);\r\n\r\n    @include media('<=633px') {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n}",".container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n}","@use 'assets/styles/include-media.scss' as *;\r\n\r\n.container {\r\n  display: grid;\r\n  grid-template-columns: 1.25fr 0.75fr;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  background-color: var(--c-white);\r\n  padding: 1rem 1.5rem;\r\n  border-radius: 0.375rem;\r\n  overflow: hidden;\r\n\r\n  @include media('<=633px') {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .full_link {\r\n    font-weight: 500;\r\n    font-size: clamp(0.875rem, 1.5vw, 1.125rem);\r\n    word-break: none;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n    @include media('<=633px') {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n\r\n  >div {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    gap: 1.5rem;\r\n\r\n    // border top\r\n    &::before {\r\n      content: '';\r\n      display: none;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      width: 150%;\r\n      height: 2px;\r\n      background-color: var(--c-neutral-100);\r\n\r\n      @include media('<=633px') {\r\n        display: block;\r\n      }\r\n    }\r\n\r\n    @include media('<=633px') {\r\n      flex-direction: column;\r\n      align-items: unset;\r\n      padding-top: 1rem;\r\n    }\r\n\r\n    a.short_link {\r\n      color: var(--c-cyan);\r\n      font-family: var(--ff-primary);\r\n      font-size: clamp(0.875rem, 1.5vw, 1.125rem);\r\n      text-decoration: none;\r\n      font-weight: 500;\r\n\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n\r\n      @include media('<=633px') {\r\n        text-align: center;\r\n        font-size: 1rem;\r\n      }\r\n\r\n      @include media('<=414px') {\r\n        text-align: start;\r\n      }\r\n    }\r\n\r\n    .btn_copy {\r\n      font-size: 0.875rem;\r\n      padding: 0.5em 1.875em;\r\n      border-radius: 5px;\r\n\r\n      &.copied {\r\n        background-color: var(--c-violet);\r\n      }\r\n\r\n      @include media('<=633px') {\r\n        display: block;\r\n        width: 100%;\r\n      }\r\n    }\r\n\r\n\r\n\r\n    @include media('<=414px') {}\r\n  }\r\n}","@use 'assets/styles/include-media.scss' as *;\r\n\r\n.container {\r\n  padding: 5rem 0;\r\n  background-color: var(--c-neutral-100);\r\n\r\n  .header {\r\n    margin: auto;\r\n    margin-bottom: 9.125rem;\r\n    max-width: 32.375rem;\r\n    text-align: center;\r\n\r\n    @include media('<=794px') {\r\n      margin-bottom: 5.125rem;\r\n    }\r\n\r\n    h2 {\r\n      font-size: clamp(1.825rem, 4vw, 2.25rem);\r\n      color: var(--c-neutral-800);\r\n    }\r\n\r\n    p {\r\n      color: var(--c-neutral-500);\r\n      font-size: clamp(0.875rem, 2vw, 1.125rem);\r\n      font-weight: 500;\r\n\r\n      @include media('<=608px') {\r\n        font-size: 1rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  .body {\r\n    position: relative;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    // align-items: center;\r\n    gap: 4rem 1.875rem;\r\n\r\n    &>*:not(.bg_line) {\r\n      flex: 1;\r\n    }\r\n\r\n    @include media('<=1083px', '>794px') {\r\n      flex-wrap: nowrap;\r\n      gap: 4rem 1.125rem;\r\n    }\r\n\r\n    @include media('<=608px') {\r\n      flex-direction: column;\r\n    }\r\n  }\r\n\r\n  .bg_line {\r\n    position: absolute;\r\n    top: 104px;\r\n    width: 80%;\r\n    height: 8px;\r\n    background-color: var(--c-cyan);\r\n    border: none;\r\n\r\n    @include media('<=608px') {\r\n      top: 0;\r\n      left: 4.5rem;\r\n      width: 8px;\r\n      height: 80%;\r\n    }\r\n\r\n    @include media('<=414px') {\r\n      top: 0;\r\n      left: calc(50% - 4px);\r\n      width: 8px;\r\n      height: 80%;\r\n    }\r\n  }\r\n}","@use 'assets/styles/include-media.scss' as *;\r\n\r\n.container {\r\n  position: relative;\r\n  height: 100%;\r\n  padding: 4.8rem 2rem 2.375rem;\r\n  background-color: var(--c-white);\r\n  border-radius: 5px;\r\n  z-index: 1;\r\n\r\n  &:first-of-type {\r\n    margin-top: -2.75rem;\r\n\r\n    @include media('<=794px') {\r\n      margin-top: unset;\r\n    }\r\n  }\r\n\r\n  &:last-of-type {\r\n    margin-top: 2.75rem;\r\n\r\n    @include media('<=794px') {\r\n      margin-top: unset;\r\n    }\r\n  }\r\n\r\n  @include media('<=1083px', '>894px') {\r\n    padding: 3.5rem 1.5rem 2rem;\r\n  }\r\n\r\n  @include media('<=894px', '>794px') {\r\n    padding: 2.875rem 1.25rem 2rem;\r\n  }\r\n\r\n\r\n  @include media('<=794px', '>608px') {\r\n    padding: 4rem 2rem 2.375rem;\r\n    min-width: 250px;\r\n    max-width: 300px;\r\n    height: auto;\r\n  }\r\n\r\n  @include media('<=414px') {\r\n    width: 100%;\r\n    padding: 4.8rem 1.5rem 2.375rem;\r\n    text-align: center;\r\n  }\r\n\r\n  .icon_wrapper {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 32px;\r\n    transform: translateY(-50%);\r\n    display: grid;\r\n    place-items: center;\r\n    width: 88px;\r\n    aspect-ratio: 1/1;\r\n    background-color: var(--c-violet);\r\n    border-radius: 50vh;\r\n\r\n    img {\r\n      width: 40px;\r\n    }\r\n\r\n    @include media('<=1083px', '>894px') {\r\n      left: 1.5rem;\r\n      width: 78px;\r\n\r\n      img {\r\n        width: 30px;\r\n      }\r\n    }\r\n\r\n    @include media('<=894px', '>794px') {\r\n      left: 1.25rem;\r\n      width: 63px;\r\n\r\n      img {\r\n        width: 25px;\r\n      }\r\n    }\r\n\r\n    @include media('<=414px') {\r\n      left: 50%;\r\n      translate: -50% 0;\r\n    }\r\n  }\r\n\r\n  &:last-of-type .icon_wrapper img {\r\n    width: 48px;\r\n\r\n    @include media('<=1083px', '>894px') {\r\n      width: 43px;\r\n    }\r\n\r\n    @include media('<=894px', '>794px') {\r\n      width: 28px;\r\n    }\r\n  }\r\n\r\n  h4 {\r\n    margin-bottom: 1rem;\r\n    color: var(--c-violet);\r\n    font-size: 1.375rem;\r\n    \r\n    @include media('<=976px', '>608px') {\r\n      font-size: clamp(1.125rem, 2vw, 1.375rem);\r\n      margin-bottom: 0.25rem;\r\n    }\r\n  }\r\n\r\n  p {\r\n    color: var(--c-neutral-500);\r\n    font-size: 0.9375rem;\r\n    font-weight: 500;\r\n    line-height: 1.75;\r\n    \r\n    @include media('<=976px', '>608px') {\r\n      font-size: clamp(0.75rem, 1.5vw, 0.9375rem);\r\n    }\r\n\r\n    @include media('<=608px') {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n}","@use 'assets/styles/include-media.scss' as *;\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .pre_footer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 1.5rem;\r\n    padding: 3.575rem 0;\r\n    background: var(--c-violet) url('/assets/images/bg-boost-desktop.svg');\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: center;\r\n\r\n    h2 {\r\n      color: var(--c-white);\r\n      text-align: center;\r\n    }\r\n\r\n    a {\r\n      font-size: 1.125rem;\r\n      // font-weight: 700;\r\n    }\r\n  }\r\n\r\n  .main_footer {\r\n    padding: 3.575rem 0;\r\n    background-color: var(--c-neutral-900);\r\n\r\n    // LAYOUT\r\n    // .inner {\r\n    //   display: grid;\r\n    //   grid-template-columns: auto 1fr auto;\r\n    //   align-items: start;\r\n    //   gap: 2.5rem 6.125rem;\r\n\r\n    //   .logo {\r\n    //     display: flex;\r\n    //   }\r\n\r\n    //   .pages {\r\n    //     flex-grow: 1;\r\n    //     display: flex;\r\n    //     justify-content: flex-end;\r\n    //     gap: 6rem;\r\n    //   }\r\n\r\n    //   @include media('<1074px') {\r\n    //     grid-template-columns: 1fr 1fr;\r\n    //     grid-template-areas:\r\n    //       \"logo socmed\"\r\n    //       \"pages pages\";\r\n\r\n    //     .logo {\r\n    //       grid-area: logo;\r\n    //     }\r\n\r\n    //     .pages {\r\n    //       grid-area: pages;\r\n    //       justify-content: center;\r\n    //       text-align: center;\r\n    //     }\r\n\r\n    //     .socmed {\r\n    //       grid-area: socmed;\r\n    //       justify-content: flex-end;\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n    .inner {\r\n      display: flex;\r\n      gap: 2.5rem 6.125rem;\r\n\r\n      @include media('<1074px') {\r\n        flex-direction: column;\r\n        align-items: center;\r\n      }\r\n    }\r\n\r\n\r\n    .logo {\r\n      display: flex;\r\n\r\n      svg>path {\r\n        fill: var(--c-white);\r\n        transition: fill 0.2s ease;\r\n      }\r\n\r\n      &:hover svg>path {\r\n        fill: var(--c-cyan);\r\n      }\r\n    }\r\n\r\n    .pages {\r\n      flex-grow: 1;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 6rem;\r\n\r\n      @include media('<1074px') {\r\n        justify-content: space-between;\r\n        gap: unset;\r\n        width: min(450px, 100%);\r\n        margin-left: -2rem;\r\n        text-align: center;\r\n      }\r\n\r\n      // @include media('<476px') {\r\n      //   flex-direction: column;\r\n      //   gap: 2rem 0;\r\n      //   margin: 0;\r\n      // }\r\n\r\n      ul {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 0.5rem;\r\n        list-style-type: none;\r\n\r\n        h5 {\r\n          display: block;\r\n          color: var(--c-white);\r\n          font-size: 0.875rem;\r\n          margin-bottom: 0.75rem;\r\n        }\r\n\r\n        a {\r\n          color: var(--c-neutral-400);\r\n          font-family: var(--ff-primary);\r\n          font-size: 0.875rem;\r\n          font-weight: 500;\r\n          text-decoration: none;\r\n          transition: color 0.2s ease;\r\n\r\n          &:hover {\r\n            color: var(--c-cyan);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .socmed {\r\n      display: flex;\r\n      align-items: center;\r\n      align-items: flex-start;\r\n      gap: 1.5rem;\r\n\r\n      li {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        a {\r\n          display: flex;\r\n\r\n          svg>path {\r\n            transition: fill 0.2s ease;\r\n          }\r\n\r\n          &:hover svg>path {\r\n            fill: var(--c-cyan);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","@use 'assets/styles/include-media.scss' as *;\r\n\r\n.container {\r\n\r\n\t.wrapper {\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: space-between;\r\n\t\tgap: 2.75rem;\r\n\t\tpadding-top: 3rem;\r\n\t}\r\n\r\n\t.logo {\r\n\t\tdisplay: flex;\r\n\t}\r\n}",".container {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  .menu_wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n    list-style-type: none;\r\n\r\n    &:first-child {\r\n      gap: 1.875rem;\r\n    }\r\n\r\n    &:last-child {\r\n      gap: 2.375rem;\r\n    }\r\n\r\n    a.menu_item {\r\n      color: var(--c-neutral-500);\r\n      font-family: var(--ff-primary);\r\n      font-size: 1rem;\r\n      font-weight: 700;\r\n      text-decoration: none;\r\n      transition: color 0.3s ease;\r\n\r\n      &:hover {\r\n        color: var(--c-neutral-900)\r\n      }\r\n\r\n      &[aria-current=page] {\r\n        color: var(--c-cyan);\r\n      }\r\n    }\r\n  }\r\n}","@use 'assets/styles/include-media.scss' as *;\r\n\r\n.container {\r\n  position: absolute;\r\n  top: calc(100% + 1rem);\r\n  right: 0;\r\n  padding: 2.5rem 1.5rem;\r\n  width: min(350px, 100%);\r\n  background-color: var(--c-violet);\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  z-index: 999;\r\n  clip-path: circle(0% at 100% 0%);\r\n  transition: clip-path 0.3s ease-in-out;\r\n\r\n  @include media('<=412px') {\r\n    width: 100%;\r\n  }\r\n\r\n  &.toggled {\r\n    clip-path: circle(70%);\r\n  }\r\n\r\n  ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.25rem;\r\n    list-style-type: none;\r\n\r\n    a {\r\n      font-size: 1.125rem;\r\n      font-weight: 700;\r\n\r\n      &.menu_item {\r\n        color: var(--c-white);\r\n        font-family: var(--ff-primary);\r\n        text-decoration: none;\r\n\r\n        &[aria-current=page] {\r\n          color: var(--c-cyan);\r\n        }\r\n      }\r\n    }\r\n\r\n    hr {\r\n      margin: 0;\r\n    }\r\n  }\r\n}",".container {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  padding: 0;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  >div {\r\n    width: 100%;\r\n    height: 4px;\r\n    background-color: var(--c-neutral-500);\r\n    transition: all 0.3s ease;\r\n  }\r\n\r\n  &:hover>div {\r\n    background-color: var(--c-violet);\r\n  }\r\n\r\n  &.toggled {\r\n    >div {\r\n      background-color: var(--c-violet);\r\n\r\n      &:nth-child(1) {\r\n        transform: translateY(9px) rotate(-45deg);\r\n      }\r\n\r\n      &:nth-child(2) {\r\n        transform: translateX(50%);\r\n        opacity: 0;\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        transform: translateY(-9px) rotate(45deg);\r\n      }\r\n    }\r\n  }\r\n}"],"names":[],"sourceRoot":""}